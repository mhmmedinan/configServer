eureka:
    client:
        fetchRegistry: true
        registerWithEureka: true
        serviceUrl:
            defaultZone: http://discoveryServer:9001/eureka
    instance:
        instance-id: ${spring.application.name}:${instanceId:${random.value}}
        preferIpAddress: true
server:
    port: 0
spring:
    application:
        name: rental-service
    datasource:
        password: 12345
        url: jdbc:postgresql://localhost:5435/rentacarrentaldb
        username: admin
    jpa:
        hibernate:
            ddl-auto: update
        properties:
            hibernate:
                dialect: org.hibernate.dialect.PostgreSQLDialect
            javax:
                persistence:
                    validation:
                        mode: none
        show-sql: true
    kafka:
      producer:
        bootstrap-servers: localhost:9092
        key-serializer: org.apache.kafka.common.serialization.StringSerializer
        value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      topic:
        name: rental_topic1

management:
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'
  metrics:
    export:
      prometheus:
        enabled: true
